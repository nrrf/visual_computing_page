<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on CV-2022-1</title><link>https://nrrf.github.io/visual_computing_page/</link><description>Recent content in Introduction on CV-2022-1</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://nrrf.github.io/visual_computing_page/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://nrrf.github.io/visual_computing_page/docs/shortcodes/euler_angles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nrrf.github.io/visual_computing_page/docs/shortcodes/euler_angles/</guid><description>Angulos de euler # Son un conjunto de tres ángulos, alfa, beta y gamma, que permiten describir la orientación de un sólido de una forma más detallada, es decir se aplicaran cambios de referencia alfa, betta, gamma, sobre el resultado de referencia anterior. Por lo que se deben multiplicar las matrices del cambio de orientación.
Existen 3 cambios de orientación de los cuales por regla general, los 3 no pueden ser ejecutados en el mismo eje, sino que por regla general, el primero y el último se suelen aplicar sobre el mismo eje, y el segundo giro se aplica sobre un eje perpendicular al eje de giro.</description></item><item><title/><link>https://nrrf.github.io/visual_computing_page/docs/shortcodes/ilusiones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nrrf.github.io/visual_computing_page/docs/shortcodes/ilusiones/</guid><description>Ilusiones # &amp;lsquo;Tienes que crear confusión sistemáticamente, libera la creatividad. Todo lo que es contradictorio crea vida&amp;rsquo;, Salvador Dalli
Penrose Triangle # Historia # El triángulo de Penrose fue creado por primera vez en 1934 por el pintor sueco Oscar Reutersvärd. Dibujó su versión de triángulo como un conjunto de cubos en proyección paralela. Aunque muchos pintores utilizaron triángulos imposibles en su arte, Oscar Reutersvärd abrió el mundo fantástico de las figuras imposibles.</description></item><item><title/><link>https://nrrf.github.io/visual_computing_page/docs/shortcodes/katex/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nrrf.github.io/visual_computing_page/docs/shortcodes/katex/</guid><description>KaTeX # KaTeX shortcode let you render math typesetting in markdown document. See KaTeX
Example # {{&amp;lt; katex [display] [class=&amp;#34;text-center&amp;#34;] &amp;gt;}} f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi {{&amp;lt; /katex &amp;gt;}} \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Display Mode Example # Here is some inline example: \(\pi(x)\) , rendered in the same line. And below is display example, having display: block \[f(x) = \int_{-\infty}^\infty\hat f(\xi)\,e^{2 \pi i \xi x}\,d\xi\] Text continues here.</description></item><item><title/><link>https://nrrf.github.io/visual_computing_page/docs/shortcodes/projections/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nrrf.github.io/visual_computing_page/docs/shortcodes/projections/</guid><description>Proyecciones # Para estas proyecciones y su interpretacion se basa en The Math behind (most) 3D games - Perspective Projection, Esta difiere de la implementacion vista en clase debido a que varia el View Volume y el sistema de coordenadas, pero la explicacion nos da una buena introducción a lo que se busca con las proyecciones
Para tener en cuenta esta usa el software vulkan q al igual que OpenGL tienen el objetivo de producir graficas en 3D</description></item><item><title/><link>https://nrrf.github.io/visual_computing_page/docs/shortcodes/rasterization/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nrrf.github.io/visual_computing_page/docs/shortcodes/rasterization/</guid><description>Rasterization # " " "</description></item><item><title/><link>https://nrrf.github.io/visual_computing_page/docs/shortcodes/scene_tree/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nrrf.github.io/visual_computing_page/docs/shortcodes/scene_tree/</guid><description>Scene Trees # "</description></item></channel></rss>